'use strict';

exports.__esModule = true;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var timeInterval = function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee(eventName, ms, fn) {
        var timerName;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        timerName = eventName + '_timer';
                        _context.next = 3;
                        return new Promise(function (resolve) {
                            window[timerName] = setInterval(function () {
                                fn.then(function (result) {
                                    resolve(result);
                                });
                            }, ms);
                        });

                    case 3:
                        return _context.abrupt('return', _context.sent);

                    case 4:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function timeInterval(_x, _x2, _x3) {
        return _ref.apply(this, arguments);
    };
}();

exports.parseAbi = parseAbi;

var _crypto = require('./utils/crypto');

var _ethers = require('ethers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

function parseAbi(abiArray, _ref2) {
    var owner_address = _ref2.owner_address,
        contract_address = _ref2.contract_address;


    var _this = this;
    var returnObj = {};
    returnObj.abi = abiArray;
    abiArray.forEach(function (item) {
        if (item.type == 'function') {
            returnObj[item.name] = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee2() {
                var arrInputs,
                    arrOutputs,
                    params,
                    paramInputTypes,
                    paramInputValues,
                    paramOutputTypes,
                    function_selector,
                    otherParams,
                    i,
                    triggerCallBackParams,
                    res,
                    coder,
                    constantArr,
                    _args2 = arguments;
                return _regenerator2.default.wrap(function _callee2$(_context2) {
                    while (1) {
                        switch (_context2.prev = _context2.next) {
                            case 0:
                                arrInputs = item.inputs;
                                arrOutputs = item.outputs;
                                params = [];
                                paramInputTypes = [];
                                paramInputValues = [];
                                paramOutputTypes = [];
                                function_selector = item.name;
                                otherParams = {};

                                arrInputs.forEach(function (itemInput) {
                                    paramInputTypes.push(itemInput.type);
                                });
                                arrOutputs.forEach(function (itemOutput) {
                                    paramOutputTypes.push(itemOutput.type);
                                });
                                function_selector += '(' + paramInputTypes.join(',') + ')';
                                params.push(paramInputTypes, paramInputValues);

                                for (i = 0; i < _args2.length; i++) {
                                    if (_typeof(_args2[i]) == 'object') {
                                        otherParams = _args2[i];
                                    } else {
                                        paramInputValues.push(_args2[i]);
                                    }
                                }
                                triggerCallBackParams = {
                                    owner_address: owner_address,
                                    contract_address: contract_address,
                                    function_selector: function_selector,
                                    parameter: params,
                                    fee_limit: otherParams.fee_limit,
                                    call_value: otherParams.call_value
                                };
                                _context2.next = 16;
                                return _this.triggerSmartContract(triggerCallBackParams);

                            case 16:
                                res = _context2.sent;

                                if (res.constant_result) {
                                    coder = new _ethers.utils.AbiCoder();

                                    if (res.constant_result.length) {
                                        //let value = res.constant_result[0];
                                        constantArr = res.constant_result.map(function (item) {
                                            return '0x' + item;
                                        });

                                        res.constant_result = coder.decode(paramOutputTypes, constantArr[0]);
                                    }
                                }
                                return _context2.abrupt('return', res);

                            case 19:
                            case 'end':
                                return _context2.stop();
                        }
                    }
                }, _callee2, this);
            }));

            returnObj[item.name].sendTransaction = function () {
                var _ref4 = _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee3(transaction, pk) {
                    var sign_Transaction, sendResult;
                    return _regenerator2.default.wrap(function _callee3$(_context3) {
                        while (1) {
                            switch (_context3.prev = _context3.next) {
                                case 0:
                                    _context3.next = 2;
                                    return (0, _crypto.signTransaction)(pk, transaction);

                                case 2:
                                    sign_Transaction = _context3.sent;
                                    _context3.next = 5;
                                    return _this.sendRawTransaction(sign_Transaction);

                                case 5:
                                    sendResult = _context3.sent;
                                    return _context3.abrupt('return', sendResult);

                                case 7:
                                case 'end':
                                    return _context3.stop();
                            }
                        }
                    }, _callee3, this);
                }));

                return function (_x4, _x5) {
                    return _ref4.apply(this, arguments);
                };
            }();
        }
        if (item.type == 'event') {
            returnObj[item.name] = function () {
                var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                    _ref5$contractAddress = _ref5.contractAddress,
                    contractAddress = _ref5$contractAddress === undefined ? contract_address : _ref5$contractAddress,
                    eventName = _ref5.eventName,
                    blockNum = _ref5.blockNum,
                    transactionId = _ref5.transactionId;

                contractAddress = _this.fromHex(contractAddress);
                var _self = this;
                return {
                    fn: function fn() {
                        var _this2 = this;

                        return _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee4() {
                            var _ref6, data;

                            return _regenerator2.default.wrap(function _callee4$(_context4) {
                                while (1) {
                                    switch (_context4.prev = _context4.next) {
                                        case 0:
                                            _context4.next = 2;
                                            return _this.getEventResult({
                                                contractAddress: contractAddress,
                                                eventName: eventName,
                                                blockNum: blockNum,
                                                transactionId: transactionId
                                            });

                                        case 2:
                                            _ref6 = _context4.sent;
                                            data = _ref6.data;
                                            return _context4.abrupt('return', data);

                                        case 5:
                                        case 'end':
                                            return _context4.stop();
                                    }
                                }
                            }, _callee4, _this2);
                        }))();
                    },
                    watch: function watch(callback) {
                        var _this3 = this;

                        this.fn().then(function (data) {
                            callback('', data);
                        }).catch(function (e) {
                            callback(e.toString());
                        });
                        _self.timer = setInterval(function () {
                            _this3.fn().then(function (data) {
                                callback('', data);
                            }).catch(function (e) {
                                callback(e.toString());
                            });
                        }, 3000);
                    },
                    get: function get(callback) {
                        var _this4 = this;

                        return _asyncToGenerator( /*#__PURE__*/_regenerator2.default.mark(function _callee5() {
                            return _regenerator2.default.wrap(function _callee5$(_context5) {
                                while (1) {
                                    switch (_context5.prev = _context5.next) {
                                        case 0:
                                            _this4.fn().then(function (data) {
                                                callback('', data);
                                            }).catch(function (e) {
                                                callback(e.toString());
                                            });

                                        case 1:
                                        case 'end':
                                            return _context5.stop();
                                    }
                                }
                            }, _callee5, _this4);
                        }))();
                    },
                    stopWatching: function stopWatching() {
                        clearInterval(_self.timer);
                    }
                };
            };
        }
    });
    return returnObj;
}